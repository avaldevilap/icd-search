---
import { Markup } from "astro-remote";
import { createRegExp, digit, oneOrMore } from "magic-regexp";
import { ofetch } from "ofetch";
import type { SearchResultResponse } from "~/types";

export const partial = true;

let q = "";
const regex = createRegExp(oneOrMore(digit));

if (Astro.request.method === "POST") {
    const formData = await Astro.request.formData();
    q = formData.get("q") as string;
}

const data = await ofetch<SearchResultResponse>(
    "https://id.who.int/icd/entity/search",
    {
        headers: {
            Authorization: `Bearer ${Astro.locals.token}`,
            "API-Version": "v2",
            "Accept-Language": "es",
        },
        params: {
            q,
            useFlexisearch: false,
            flatResults: false,
            highlightingEnabled: true,
        },
    },
);
---

{
    data.destinationEntities?.map((item) => (
        <li
            class="group list-none border rounded-lg hover:bg-secondary/30 focus:bg-secondary/30 hover:text-primary focus:ring-2 focus:ring-secondary"
            title={item.title}
        >
            <div class="w-full rounded-lg p-6">
                <h2 class="text-xl font-semibold">
                    <Markup content={item.title ?? ""} />
                </h2>

                <div
                    hx-post="/partials/entity-code"
                    hx-vals={`{ "foundationUri": "${item.id}" }`}
                    hx-swap="outerHTML"
                    hx-trigger="load"
                />

                <div
                    hx-post="/partials/entity"
                    hx-vals={`{ "entityId": "${item?.id?.match(regex)}" }`}
                    hx-swap="outerHTML"
                    hx-trigger="load"
                />
            </div>
        </li>
    ))
}
